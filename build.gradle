/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.16'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'application'
}

ext {
    springBootVersion = '2.7.16'
}

sourceCompatibility = 17
targetCompatibility = 17

apply plugin: 'java'
apply plugin: 'org.springframework.boot'

group = 'com.danielqueiroz.fotoradar'
version = '0.0.1-SNAPSHOT'
description = 'fotoradar'


repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.spring.io/snapshot')
    }

    maven {
        url = uri('https://repo.spring.io/milestone')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-data-jdbc:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb:${springBootVersion}"
    runtimeOnly "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
    testImplementation 'org.springframework.security:spring-security-test'


    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:4.9.2'

    implementation 'com.auth0:java-jwt:3.19.1'
    implementation 'org.springframework.security:spring-security-jwt:1.1.1.RELEASE'

    implementation 'org.projectlombok:lombok:1.18.26'
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    implementation 'org.springframework.security:spring-security-web:5.7.7'
    implementation 'org.springframework.security.oauth:spring-security-oauth2:2.5.2.RELEASE'
    implementation 'org.springframework.security:spring-security-config:5.3.13.RELEASE'

    implementation 'com.google.guava:guava:31.1-jre'

    implementation 'com.google.code.gson:gson:2.10'
    implementation 'commons-net:commons-net:3.9.0'
    implementation 'io.springfox:springfox-swagger2:2.9.2'

    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.6.RELEASE'

    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"

    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:3.4.5'

}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

application {
    mainClass = 'com.danielqueiroz.fotoradar.FotoradarApplication'
}


tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
    }
}

